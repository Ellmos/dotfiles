#!/bin/sh

[ "$#" -eq 0 ] && echo "psc: usage: psc <directory> [proto]" && exit 1

[ -d "$1" ] && echo "psc: '$1' already exists" && exit 1

fct="$1"
proto="void $1()"
[ "$#" -eq 2 ] && proto="$2"

mkdir "$fct"
cd "$fct"

#------------------------------------------Header
touch "$fct".hh

tee "$fct".hh > /dev/null << EOF
#pragma once

$proto;
EOF

#------------------------------------------C file
touch "$fct".cc
tee "$fct".cc > /dev/null << EOF
#include "$fct.hh"

$proto
{
    return nullptr;
}
EOF


#------------------------------------------Main
tee main.cc > /dev/null << EOF
#include <stdio.h>

#include "$fct.hh"

$proto;

void print_args(int argc, char **argv);

int main(int argc, char **argv)
{
    print_args(argc, argv);
}

void print_args(int argc, char **argv)
{
    printf("argc = %d\n", argc);
    for (int i = 0; i < argc; i++)
        printf("argv[%d] = %s\n", i, argv[i]);
}
EOF


#------------------------------------------Makefile
tee Makefile > /dev/null << EOF
CC = g++
CPPFLAGS =
CXXFLAGS=-std=c++20 -Wall -Wextra -Werror -Wold-style-cast -pedantic
LDFLAGS =
LDLIBS =

SRC = $fct.cc
OBJ = \$(SRC:.cc=.o)

BIN_MAIN = main
SRC_MAIN = main.cc
OBJ_MAIN = \$(SRC_MAIN:.cc=.o)

all: main

run: CXXLAGS += -fsanitize=address
run: LDFLAGS += -fsanitize=address
run: LDLIBS += -fsanitize=address -lasan
run: LDPRELOAD += -fsanitize=address -lasan
run: main
	- ./\$(BIN_MAIN)

main: \$(OBJ) \$(OBJ_MAIN)
	\$(CC) \$^ -o \$(BIN_MAIN) \$(LDLIBS)

.PHONY: clean test main check run

clean: 
	\$(RM) \$(OBJ) \$(OBJ_MAIN)
	\$(RM) \$(BIN_MAIN)
EOF

